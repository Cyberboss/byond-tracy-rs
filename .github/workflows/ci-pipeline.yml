name: "CI Pipeline"

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build-windows:
    name: Build and Test (Windows)
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: i686-pc-windows-msvc
          components: clippy, rustfmt, rust-src

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-windows-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --target=i686-pc-windows-msvc

      - name: Test
        run: cargo test --target=i686-pc-windows-msvc

      - name: Clippy
        run: cargo clippy --target=i686-pc-windows-msvc

  build-linux:
    name: Build and Test (Linux)
    runs-on: ubuntu-latest
    steps:
      - name: Install Native Dependencies
        run: |
          sudo apt update
          sudo apt install -y g++-multilib

      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: i686-unknown-linux-gnu
          components: clippy, rustfmt, rust-src

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-linux-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --target=i686-unknown-linux-gnu

      - name: Test
        run: cargo test --target=i686-unknown-linux-gnu

      - name: Clippy
        run: cargo clippy --target=i686-unknown-linux-gnu

  stylecop:
    name: Check Style Guides
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: i686-unknown-linux-gnu
          components: clippy, rustfmt, rust-src

      - name: Code Formatting Check
        run: cargo fmt --check

      - name: Download EditorConfig Checker
        uses: editorconfig-checker/action-editorconfig-checker@v2

      - name: Run EditorConfig Checker
        run: editorconfig-checker
